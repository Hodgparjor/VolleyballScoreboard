doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    title Volleyball Scoreboard
    link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css' rel='stylesheet')
    //- script(src='/socket.io/socket.io.js')
    script(src='https://code.jquery.com/jquery-3.6.0.min.js')

  body
    .container
      h1 Volleyball Matches
      .row
        .col-md-12
          button#addMatchBtn.btn.btn-primary(data-bs-toggle='modal', data-bs-target='#addMatchModal') Add New Match
          table.table.table-striped
            thead
              tr
                th Date
                th Team A
                th Team B
                th Result
                th Status
            tbody#matchesList
              // Mecze zostaną załadowane z API

    // Modal do dodawania nowego meczu
    .modal.fade#addMatchModal(tabindex='-1' aria-labelledby='addMatchModalLabel' aria-hidden='true')
      .modal-dialog
        .modal-content
          .modal-header
            h5.modal-title#addMatchModalLabel Add New Match
            button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
          .modal-body
            form#addMatchForm
              .mb-3
                label.form-label(for='teamA') Team A Name
                input.form-control#teamA(type='text' placeholder='Enter Team A Name' required)
              .mb-3
                label.form-label(for='teamB') Team B Name
                input.form-control#teamB(type='text' placeholder='Enter Team B Name' required)
              .mb-3
                label.form-label(for='matchDate') Match Date
                input.form-control#matchDate(type='datetime-local' required)
              .mb-3
                label.form-label(for='status') Match Status
                select.form-control#status
                  option(value='PLANNED') Planned
                  option(value='IN_PROGRESS') In Progress
                  option(value='FINISHED') Finished
          .modal-footer
            button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Close
            button.btn.btn-primary#submitMatch(type='submit' form='addMatchForm') Add Match

    script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js')
    
script.
  document.addEventListener('DOMContentLoaded', function() {
    console.log("DOM fully loaded and parsed");

    // Pobierz mecze z API
    fetch('/matches')
    .then(res => res.json())
    .then(data => {
      console.log("Matches fetched: ", data);  // Debugging log
      const matchesList = document.getElementById('matchesList');
      data.forEach(match => {
        const row = document.createElement('tr');
        row.innerHTML = `<td>${(new Date(match.date)).toLocaleString()}</td><td>${match.teama_name}</td><td>${match.teamb_name}</td><td>${match.result}</td><td>${match.status}</td>`;
        matchesList.appendChild(row);
      });
    });

    // Formularz dodawania nowego meczu
    const addMatchForm = document.getElementById('addMatchForm');
    if (addMatchForm) {
      //- console.log("Add match form found!");  // Log, if form is found
      //- document.getElementById('submitMatch').addEventListener('click', function (e) {
      //-   e.preventDefault();
      //-   console.log("Button clicked");  // Check if submit event is triggered
        
      //-   const teamA = document.getElementById('teamA').value;
      //-   const teamB = document.getElementById('teamB').value;
      //-   const matchDate = document.getElementById('matchDate').value;
      //-   const status = document.getElementById('status').value;

      //-   console.log("Adding new match teamA: " + teamA + " teamB: " + teamB + " date: " + matchDate + " status: " + status);
        
      //-   const newMatch = {
      //-     teamA_name: teamA,
      //-     teamB_name: teamB,
      //-     date: matchDate,
      //-     result: '0:0', // Default result
      //-     status: status
      //-   };

      //-   // Wyślij dane do serwera
      //-   fetch('/matches', {
      //-     method: 'POST',
      //-     headers: {
      //-       'Content-Type': 'application/json',
      //-     },
      //-     body: JSON.stringify(newMatch)
      //-   })
      //-   .then(res => res.json())
      //-   .then(data => {
      //-     console.log("Match added: ", data);  // Log response from server
      //-     // Dodaj nowy mecz do tabeli
      //-     const row = document.createElement('tr');
      //-     row.innerHTML = `<td>${(new Date(data.date)).toLocaleString()}</td><td>${data.teama_name}</td><td>${data.teamb_name}</td><td>${data.result}</td><td>${data.status}</td>`;
      //-     const matchesList = document.getElementById('matchesList');
      //-     matchesList.appendChild(row);

      //-     // Zamknij modal
      //-     const modal = bootstrap.Modal.getInstance(document.getElementById('addMatchModal'));
      //-     modal.hide();
      //-   })
      //-   .catch(error => {
      //-     console.error("Error adding match: ", error);  // Log error, if any
      //-   });
      //- });

      addMatchForm.addEventListener('submit', function (e) {
        e.preventDefault();
        console.log("Form submitted");  // Check if submit event is triggered
        
        const teamA = document.getElementById('teamA').value;
        const teamB = document.getElementById('teamB').value;
        const matchDate = document.getElementById('matchDate').value;
        const status = document.getElementById('status').value;

        console.log("Adding new match teamA: " + teamA + " teamB: " + teamB + " date: " + matchDate + " status: " + status);
        
        const newMatch = {
          teamA_name: teamA,
          teamB_name: teamB,
          date: matchDate,
          result: '0:0', // Default result
          status: status
        };

        // Wyślij dane do serwera
        fetch('/matches', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(newMatch)
        })
        .then(res => res.json())
        .then(data => {
          console.log("Match added: ", data);  // Log response from server
          // Dodaj nowy mecz do tabeli
          const row = document.createElement('tr');
          row.innerHTML = `<td>${(new Date(data.date)).toLocaleString()}</td><td>${data.teama_name}</td><td>${data.teamb_name}</td><td>${data.result}</td><td>${data.status}</td>`;
          const matchesList = document.getElementById('matchesList');
          matchesList.appendChild(row);

          // Zamknij modal
          const modal = bootstrap.Modal.getInstance(document.getElementById('addMatchModal'));
          document.getElementById("addMatchForm").reset()
          modal.hide();
        })
        .catch(error => {
          console.error("Error adding match: ", error);  // Log error, if any
        });
      });
    } else {
      console.error("Add match form not found!");  // Log if form isn't found
    }
  });

      // WebSocket: Aktualizacja meczu
      //- socket.on('updateScore', data => {
      //-   // Zaktualizuj wynik meczu na liście
      //- });
